{"ast":null,"code":"//import recipes from \"../data/recipes.json\";\nexport async function getRecipes() {\n  const response = await fetch(\"https://internship-recipe-api.ckpd.co/recipes\", {\n    headers: {\n      \"X-Api-Key\": \"remark-fish-magician\"\n    },\n    method: \"GET\"\n  });\n  const jsonData = await response.json();\n  console.log(`初期のjsondataは${jsonData}`);\n  const links = jsonData === null || jsonData === void 0 ? void 0 : jsonData.links;\n  const recipes = jsonData === null || jsonData === void 0 ? void 0 : jsonData.recipes;\n  return recipes;\n}\nexport async function getRecipe(id) {\n  const response = await fetch(`https://internship-recipe-api.ckpd.co/recipes/${id}`, {\n    headers: {\n      \"X-Api-Key\": \"remark-fish-magician\"\n    },\n    method: \"GET\"\n  });\n  const recipe = await response.json(); //const links = jsonData?.links;\n  //const recipe = jsonData?.recipes;\n  //console.log(`jsondata = ${recipe}`);\n\n  return recipe; //return (recipe as Recipe[]).find((recipe) => recipe.id === id) || null;\n}","map":{"version":3,"sources":["/Users/yamaguchitaiyo/Documents/cookpad/spring-internship-2021-recipe-site/lib/recipe.ts"],"names":["getRecipes","response","fetch","headers","method","jsonData","json","console","log","links","recipes","getRecipe","id","recipe"],"mappings":"AAAA;AAmBA,OAAO,eAAeA,UAAf,GAA+C;AACpD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+CAD0B,EAE1B;AACEC,IAAAA,OAAO,EAAE;AAAE,mBAAa;AAAf,KADX;AAEEC,IAAAA,MAAM,EAAE;AAFV,GAF0B,CAA5B;AAOA,QAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAa,eAAcH,QAAS,EAApC;AACA,QAAMI,KAAK,GAAGJ,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEI,KAAxB;AACA,QAAMC,OAAO,GAAGL,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEK,OAA1B;AACA,SAAOA,OAAP;AACD;AAED,OAAO,eAAeC,SAAf,CAAyBC,EAAzB,EAA6D;AAClE,QAAMX,QAAQ,GAAG,MAAMC,KAAK,CACzB,iDAAgDU,EAAG,EAD1B,EAE1B;AACET,IAAAA,OAAO,EAAE;AAAE,mBAAa;AAAf,KADX;AAEEC,IAAAA,MAAM,EAAE;AAFV,GAF0B,CAA5B;AAOA,QAAMS,MAAM,GAAG,MAAMZ,QAAQ,CAACK,IAAT,EAArB,CARkE,CASlE;AACA;AACA;;AACA,SAAOO,MAAP,CAZkE,CAalE;AACD","sourcesContent":["//import recipes from \"../data/recipes.json\";\n\nexport type Recipe = {\n  id: number;\n  title: string;\n  description: string;\n  image_url: string | null;\n  author: {\n    user_name: string;\n  };\n  published_at: string;\n  steps: string[];\n  ingredients: {\n    name: string;\n    quantity: string;\n  }[];\n  related_recipes: number[];\n};\n\nexport async function getRecipes(): Promise<Recipe[]> {\n  const response = await fetch(\n    \"https://internship-recipe-api.ckpd.co/recipes\",\n    {\n      headers: { \"X-Api-Key\": \"remark-fish-magician\" },\n      method: \"GET\",\n    }\n  );\n  const jsonData = await response.json();\n  console.log(`初期のjsondataは${jsonData}`);\n  const links = jsonData?.links;\n  const recipes = jsonData?.recipes;\n  return recipes as Recipe[];\n}\n\nexport async function getRecipe(id: number): Promise<Recipe | null> {\n  const response = await fetch(\n    `https://internship-recipe-api.ckpd.co/recipes/${id}`,\n    {\n      headers: { \"X-Api-Key\": \"remark-fish-magician\" },\n      method: \"GET\",\n    }\n  );\n  const recipe = await response.json();\n  //const links = jsonData?.links;\n  //const recipe = jsonData?.recipes;\n  //console.log(`jsondata = ${recipe}`);\n  return recipe as Recipe;\n  //return (recipe as Recipe[]).find((recipe) => recipe.id === id) || null;\n}\n"]},"metadata":{},"sourceType":"module"}