{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yamaguchitaiyo/Documents/cookpad/spring-internship-2021-recipe-site/pages/index.tsx\";\nimport { getRecipes, search } from \"../lib/recipe\";\nimport { useState, useEffect } from \"react\";\nimport Header from \"../components/Header\";\nimport OverView from \"../components/OverView\";\n\nconst TopPage = () => {\n  const {\n    0: recipes,\n    1: setRecipes\n  } = useState(null);\n  const {\n    0: keyword,\n    1: setKeyword\n  } = useState(\"\");\n\n  const handleSubmit = async () => {\n    if (keyword !== \"\") {\n      console.log(\"test\");\n      const res = await search(keyword); //kokomade\n\n      setRecipes(res.recipes);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      const response = await getRecipes();\n      setRecipes(response.recipes);\n    })();\n  }, []);\n  if (recipes === null) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"THERE IS NO RECIPES\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 32\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          name: \"search\",\n          placeholder: \"\\u4F8B...\\u9903\\u5B50\",\n          onChange: e => {\n            setKeyword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), recipes.map(r => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(OverView, {\n        id: r.id,\n        title: r.title,\n        description: r.description,\n        image_url: r.image_url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, r.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}; //useeffectを使う\n\n/*export const getStaticProps = async () => {\n  const recipes = await getRecipes();\n  return {\n    props: {\n      recipes: recipes,\n    },\n  };\n};*/\n\n\nexport default TopPage;","map":{"version":3,"sources":["/Users/yamaguchitaiyo/Documents/cookpad/spring-internship-2021-recipe-site/pages/index.tsx"],"names":["getRecipes","search","useState","useEffect","Header","OverView","TopPage","recipes","setRecipes","keyword","setKeyword","handleSubmit","console","log","res","response","e","target","value","map","r","id","title","description","image_url"],"mappings":";;AACA,SAASA,UAAT,EAAqBC,MAArB,QAAmC,eAAnC;AACA,SAAaC,QAAb,EAAuBC,SAAvB,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAKA,MAAMC,OAAW,GAAG,MAAM;AACxB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAAkB,IAAlB,CAAtC;AACA,QAAM;AAAA,OAACO,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAAC,EAAD,CAAtC;;AACA,QAAMS,YAAY,GAAG,YAAY;AAC/B,QAAIF,OAAO,KAAK,EAAhB,EAAoB;AAClBG,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,YAAMC,GAAG,GAAG,MAAMb,MAAM,CAACQ,OAAD,CAAxB,CAFkB,CAEiB;;AACnCD,MAAAA,UAAU,CAACM,GAAG,CAACP,OAAL,CAAV;AACD;AACF,GAND;;AAOAJ,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,YAAMY,QAAQ,GAAG,MAAMf,UAAU,EAAjC;AACAQ,MAAAA,UAAU,CAACO,QAAQ,CAACR,OAAV,CAAV;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AAOA,MAAIA,OAAO,KAAK,IAAhB,EAAsB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEtB,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEI,YAAhB;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,WAAW,EAAC,uBAHd;AAIE,UAAA,QAAQ,EAAGK,CAAD,IAAO;AACfN,YAAAA,UAAU,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD;AANH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,EAcGX,OAAO,CAACY,GAAR,CAAaC,CAAD,iBACX;AAAA,6BACE,QAAC,QAAD;AACE,QAAA,EAAE,EAAEA,CAAC,CAACC,EADR;AAEE,QAAA,KAAK,EAAED,CAAC,CAACE,KAFX;AAGE,QAAA,WAAW,EAAEF,CAAC,CAACG,WAHjB;AAIE,QAAA,SAAS,EAAEH,CAAC,CAACI;AAJf;AAAA;AAAA;AAAA;AAAA;AADF,OAAUJ,CAAC,CAACC,EAAZ;AAAA;AAAA;AAAA;AAAA,YADD,CAdH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA9CD,C,CAgDA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAef,OAAf","sourcesContent":["import Link from \"next/link\";\nimport { getRecipes, search } from \"../lib/recipe\";\nimport { FC, useState, useEffect } from \"react\";\nimport Header from \"../components/Header\";\nimport OverView from \"../components/OverView\";\nimport Form from \"../components/Form\";\nimport type { NextPage } from \"next\";\nimport type { Recipe } from \"../lib/recipe\";\n\nconst TopPage: FC = () => {\n  const [recipes, setRecipes] = useState<Recipe[] | null>(null);\n  const [keyword, setKeyword] = useState(\"\");\n  const handleSubmit = async () => {\n    if (keyword !== \"\") {\n      console.log(\"test\");\n      const res = await search(keyword); //kokomade\n      setRecipes(res.recipes);\n    }\n  };\n  useEffect(() => {\n    (async () => {\n      const response = await getRecipes();\n      setRecipes(response.recipes);\n    })();\n  }, []);\n\n  if (recipes === null) return <div>THERE IS NO RECIPES</div>;\n\n  return (\n    <div>\n      <Header />\n      <div>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"search\"\n            name=\"search\"\n            placeholder=\"例...餃子\"\n            onChange={(e) => {\n              setKeyword(e.target.value);\n            }}\n          />\n        </form>\n      </div>\n      {recipes.map((r) => (\n        <div key={r.id}>\n          <OverView\n            id={r.id}\n            title={r.title}\n            description={r.description}\n            image_url={r.image_url}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\n//useeffectを使う\n/*export const getStaticProps = async () => {\n  const recipes = await getRecipes();\n  return {\n    props: {\n      recipes: recipes,\n    },\n  };\n};*/\n\nexport default TopPage;\n"]},"metadata":{},"sourceType":"module"}