{"ast":null,"code":"//import recipes from \"../data/recipes.json\";\nexport async function getRecipes() {\n  const response = await fetch(\"https://internship-recipe-api.ckpd.co/recipes\", {\n    headers: {\n      \"X-Api-Key\": \"remark-fish-magician\"\n    },\n    method: \"GET\"\n  });\n  const recipes = await response.json(); //const links = jsonData?.links;\n  //const recipes = jsonData?.recipes;\n\n  return recipes;\n}\nexport async function getRecipe(id) {\n  const response = await fetch(`https://internship-recipe-api.ckpd.co/recipes/${id}`, {\n    headers: {\n      \"X-Api-Key\": \"remark-fish-magician\"\n    },\n    method: \"GET\"\n  });\n  const recipe = await response.json();\n  return recipe;\n}\nexport async function search(keyword) {\n  const response = await fetch(`https://internship-recipe-api.ckpd.co/recipes/search?keyword=${keyword}`, {\n    headers: {\n      \"X-Api-Key\": \"remark-fish-magician\"\n    },\n    method: \"GET\"\n  });\n  const searchRes = await response.json();\n  return searchRes;\n}","map":{"version":3,"sources":["/Users/yamaguchitaiyo/Documents/cookpad/spring-internship-2021-recipe-site/lib/recipe.ts"],"names":["getRecipes","response","fetch","headers","method","recipes","json","getRecipe","id","recipe","search","keyword","searchRes"],"mappings":"AAAA;AA6BA,OAAO,eAAeA,UAAf,GAA0C;AAC/C,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+CAD0B,EAE1B;AACEC,IAAAA,OAAO,EAAE;AAAE,mBAAa;AAAf,KADX;AAEEC,IAAAA,MAAM,EAAE;AAFV,GAF0B,CAA5B;AAOA,QAAMC,OAAO,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAtB,CAR+C,CAS/C;AACA;;AACA,SAAOD,OAAP;AACD;AAED,OAAO,eAAeE,SAAf,CAAyBC,EAAzB,EAA0D;AAC/D,QAAMP,QAAQ,GAAG,MAAMC,KAAK,CACzB,iDAAgDM,EAAG,EAD1B,EAE1B;AACEL,IAAAA,OAAO,EAAE;AAAE,mBAAa;AAAf,KADX;AAEEC,IAAAA,MAAM,EAAE;AAFV,GAF0B,CAA5B;AAOA,QAAMK,MAAM,GAAG,MAAMR,QAAQ,CAACK,IAAT,EAArB;AACA,SAAOG,MAAP;AACD;AAED,OAAO,eAAeC,MAAf,CAAsBC,OAAtB,EAAqD;AAC1D,QAAMV,QAAQ,GAAG,MAAMC,KAAK,CACzB,gEAA+DS,OAAQ,EAD9C,EAE1B;AACER,IAAAA,OAAO,EAAE;AAAE,mBAAa;AAAf,KADX;AAEEC,IAAAA,MAAM,EAAE;AAFV,GAF0B,CAA5B;AAQA,QAAMQ,SAAS,GAAG,MAAMX,QAAQ,CAACK,IAAT,EAAxB;AACA,SAAOM,SAAP;AACD","sourcesContent":["//import recipes from \"../data/recipes.json\";\n\nexport type Recipe = {\n  id: number;\n  title: string;\n  description: string;\n  image_url: string | null;\n  author: {\n    user_name: string;\n  };\n  published_at: string;\n  steps: string[];\n  ingredients: {\n    name: string;\n    quantity: string;\n  }[];\n  related_recipes: number[];\n};\n\nexport type Links = {\n  next?: string;\n  prev?: string;\n};\n\nexport type Res = {\n  recipes: Recipe[];\n  links: Links;\n};\n\nexport async function getRecipes(): Promise<Res> {\n  const response = await fetch(\n    \"https://internship-recipe-api.ckpd.co/recipes\",\n    {\n      headers: { \"X-Api-Key\": \"remark-fish-magician\" },\n      method: \"GET\",\n    }\n  );\n  const recipes = await response.json();\n  //const links = jsonData?.links;\n  //const recipes = jsonData?.recipes;\n  return recipes as Res;\n}\n\nexport async function getRecipe(id: number): Promise<Res | null> {\n  const response = await fetch(\n    `https://internship-recipe-api.ckpd.co/recipes/${id}`,\n    {\n      headers: { \"X-Api-Key\": \"remark-fish-magician\" },\n      method: \"GET\",\n    }\n  );\n  const recipe = await response.json();\n  return recipe as Res;\n}\n\nexport async function search(keyword: string): Promise<Res> {\n  const response = await fetch(\n    `https://internship-recipe-api.ckpd.co/recipes/search?keyword=${keyword}`,\n    {\n      headers: { \"X-Api-Key\": \"remark-fish-magician\" },\n      method: \"GET\",\n    }\n  );\n\n  const searchRes = await response.json();\n  return searchRes as Res;\n}\n"]},"metadata":{},"sourceType":"module"}