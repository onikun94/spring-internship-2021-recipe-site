{"ast":null,"code":"//import recipes from \"../data/recipes.json\";\nexport async function getRecipes() {\n  const response = await fetch(\"https://internship-recipe-api.ckpd.co/recipes\", {\n    headers: {\n      \"X-APi-Key\": \"reamark-fish-magician\"\n    }\n  });\n  const recipes = await response.json();\n  console.log(recipe);\n  return recipes;\n}\nexport async function getRecipe(id) {\n  const response = await fetch(\"https://internship-recipe-api.ckpd.co/recipes\", {\n    headers: {\n      \"X-APi-Key\": \"reamark-fish-magician\"\n    }\n  });\n  const recipes = await response.json();\n  return recipes.find(recipe => recipe.id === id) || null;\n}","map":{"version":3,"sources":["/Users/yamaguchitaiyo/Documents/cookpad/spring-internship-2021-recipe-site/lib/recipe.ts"],"names":["getRecipes","response","fetch","headers","recipes","json","console","log","recipe","getRecipe","id","find"],"mappings":"AAAA;AAcA,OAAO,eAAeA,UAAf,GAA+C;AACpD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+CAD0B,EAE1B;AAAEC,IAAAA,OAAO,EAAE;AAAE,mBAAa;AAAf;AAAX,GAF0B,CAA5B;AAIA,QAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACA,SAAOJ,OAAP;AACD;AAED,OAAO,eAAeK,SAAf,CAAyBC,EAAzB,EAA6D;AAClE,QAAMT,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+CAD0B,EAE1B;AAAEC,IAAAA,OAAO,EAAE;AAAE,mBAAa;AAAf;AAAX,GAF0B,CAA5B;AAIA,QAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAtB;AAEA,SAAQD,OAAD,CAAsBO,IAAtB,CAA4BH,MAAD,IAAYA,MAAM,CAACE,EAAP,KAAcA,EAArD,KAA4D,IAAnE;AACD","sourcesContent":["//import recipes from \"../data/recipes.json\";\n\nexport type Recipe = {\n  id: number;\n  name: string;\n  description: string;\n  imageUrl: string | null;\n  steps: string[];\n  ingredients: {\n    name: string;\n    quantity: string;\n  }[];\n};\n\nexport async function getRecipes(): Promise<Recipe[]> {\n  const response = await fetch(\n    \"https://internship-recipe-api.ckpd.co/recipes\",\n    { headers: { \"X-APi-Key\": \"reamark-fish-magician\" } }\n  );\n  const recipes = await response.json();\n  console.log(recipe);\n  return recipes as Recipe[];\n}\n\nexport async function getRecipe(id: number): Promise<Recipe | null> {\n  const response = await fetch(\n    \"https://internship-recipe-api.ckpd.co/recipes\",\n    { headers: { \"X-APi-Key\": \"reamark-fish-magician\" } }\n  );\n  const recipes = await response.json();\n\n  return (recipes as Recipe[]).find((recipe) => recipe.id === id) || null;\n}\n"]},"metadata":{},"sourceType":"module"}