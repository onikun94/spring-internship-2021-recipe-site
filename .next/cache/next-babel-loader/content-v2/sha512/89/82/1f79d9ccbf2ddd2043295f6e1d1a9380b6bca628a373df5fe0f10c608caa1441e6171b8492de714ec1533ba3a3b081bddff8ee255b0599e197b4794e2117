{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/yamaguchitaiyo/Documents/cookpad/spring-internship-2021-recipe-site/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/yamaguchitaiyo/Documents/cookpad/spring-internship-2021-recipe-site/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/yamaguchitaiyo/Documents/cookpad/spring-internship-2021-recipe-site/pages/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { getRecipes, search } from \"../lib/recipe\";\nimport { useState, useEffect } from \"react\";\nimport Header from \"../components/Header\";\nimport OverView from \"../components/OverView\";\n\nvar TopPage = function TopPage() {\n  _s();\n\n  var _useState = useState(null),\n      recipes = _useState[0],\n      setRecipes = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      keyword = _useState2[0],\n      setKeyword = _useState2[1];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(keyword !== \"\")) {\n                _context.next = 7;\n                break;\n              }\n\n              console.log(\"test\");\n              _context.next = 4;\n              return search(keyword);\n\n            case 4:\n              res = _context.sent;\n              //kokomade\n              setRecipes(res.recipes);\n              console.log(res.recipes);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return getRecipes();\n\n            case 2:\n              response = _context2.sent;\n              setRecipes(response.recipes);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }, []);\n  if (recipes === null) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"THERE IS NO RECIPES\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 32\n  }, _this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          name: \"search\",\n          placeholder: \"\\u4F8B...\\u9903\\u5B50\",\n          onChange: function onChange(e) {\n            setKeyword(e.target.value); //keywordに検索ワードセット\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, _this), recipes.map(function (r) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(OverView, {\n          id: r.id,\n          title: r.title,\n          description: r.description,\n          image_url: r.image_url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, _this)\n      }, r.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, _this);\n}; //useeffectを使う\n\n/*export const getStaticProps = async () => {\n  const recipes = await getRecipes();\n  return {\n    props: {\n      recipes: recipes,\n    },\n  };\n};*/\n\n\n_s(TopPage, \"ckh/7cql0rYKMU9WvrN0m5T8Cfk=\");\n\n_c = TopPage;\nexport default TopPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopPage\");","map":{"version":3,"sources":["/Users/yamaguchitaiyo/Documents/cookpad/spring-internship-2021-recipe-site/pages/index.tsx"],"names":["getRecipes","search","useState","useEffect","Header","OverView","TopPage","recipes","setRecipes","keyword","setKeyword","handleSubmit","console","log","res","response","e","target","value","map","r","id","title","description","image_url"],"mappings":";;;;;;;;AACA,SAASA,UAAT,EAAqBC,MAArB,QAAmC,eAAnC;AACA,SAAaC,QAAb,EAAuBC,SAAvB,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAKA,IAAMC,OAAW,GAAG,SAAdA,OAAc,GAAM;AAAA;;AAAA,kBACMJ,QAAQ,CAAkB,IAAlB,CADd;AAAA,MACjBK,OADiB;AAAA,MACRC,UADQ;;AAAA,mBAEMN,QAAQ,CAAS,EAAT,CAFd;AAAA,MAEjBO,OAFiB;AAAA,MAERC,UAFQ;;AAIxB,MAAMC,YAAY;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACfF,OAAO,KAAK,EADG;AAAA;AAAA;AAAA;;AAEjBG,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAFiB;AAAA,qBAGCZ,MAAM,CAACQ,OAAD,CAHP;;AAAA;AAGXK,cAAAA,GAHW;AAGkB;AACnCN,cAAAA,UAAU,CAACM,GAAG,CAACP,OAAL,CAAV;AACAK,cAAAA,OAAO,CAACC,GAAR,CAAYC,GAAG,CAACP,OAAhB;;AALiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZI,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAQAR,EAAAA,SAAS,CAAC,YAAM;AACd,6DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACwBH,UAAU,EADlC;;AAAA;AACOe,cAAAA,QADP;AAECP,cAAAA,UAAU,CAACO,QAAQ,CAACR,OAAV,CAAV;;AAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAID,GALQ,EAKN,EALM,CAAT;AAOA,MAAIA,OAAO,KAAK,IAAhB,EAAsB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAEtB,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEI,YAAhB;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,WAAW,EAAC,uBAHd;AAIE,UAAA,QAAQ,EAAE,kBAACK,CAAD,EAAO;AACfN,YAAAA,UAAU,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV,CADe,CACa;AAC7B;AANH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAFF,EAcGX,OAAO,CAACY,GAAR,CAAY,UAACC,CAAD;AAAA,0BACX;AAAA,+BACE,QAAC,QAAD;AACE,UAAA,EAAE,EAAEA,CAAC,CAACC,EADR;AAEE,UAAA,KAAK,EAAED,CAAC,CAACE,KAFX;AAGE,UAAA,WAAW,EAAEF,CAAC,CAACG,WAHjB;AAIE,UAAA,SAAS,EAAEH,CAAC,CAACI;AAJf;AAAA;AAAA;AAAA;AAAA;AADF,SAAUJ,CAAC,CAACC,EAAZ;AAAA;AAAA;AAAA;AAAA,eADW;AAAA,KAAZ,CAdH;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA2BD,CAhDD,C,CAkDA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GA1DMf,O;;KAAAA,O;AA4DN,eAAeA,OAAf","sourcesContent":["import Link from \"next/link\";\nimport { getRecipes, search } from \"../lib/recipe\";\nimport { FC, useState, useEffect } from \"react\";\nimport Header from \"../components/Header\";\nimport OverView from \"../components/OverView\";\nimport Form from \"../components/Form\";\nimport type { NextPage } from \"next\";\nimport type { Recipe } from \"../lib/recipe\";\n\nconst TopPage: FC = () => {\n  const [recipes, setRecipes] = useState<Recipe[] | null>(null);\n  const [keyword, setKeyword] = useState<string>(\"\");\n\n  const handleSubmit = async () => {\n    if (keyword !== \"\") {\n      console.log(\"test\");\n      const res = await search(keyword); //kokomade\n      setRecipes(res.recipes);\n      console.log(res.recipes);\n    }\n  };\n  useEffect(() => {\n    (async () => {\n      const response = await getRecipes();\n      setRecipes(response.recipes);\n    })();\n  }, []);\n\n  if (recipes === null) return <div>THERE IS NO RECIPES</div>;\n\n  return (\n    <div>\n      <Header />\n      <div>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"search\"\n            name=\"search\"\n            placeholder=\"例...餃子\"\n            onChange={(e) => {\n              setKeyword(e.target.value); //keywordに検索ワードセット\n            }}\n          />\n        </form>\n      </div>\n      {recipes.map((r) => (\n        <div key={r.id}>\n          <OverView\n            id={r.id}\n            title={r.title}\n            description={r.description}\n            image_url={r.image_url}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\n//useeffectを使う\n/*export const getStaticProps = async () => {\n  const recipes = await getRecipes();\n  return {\n    props: {\n      recipes: recipes,\n    },\n  };\n};*/\n\nexport default TopPage;\n"]},"metadata":{},"sourceType":"module"}