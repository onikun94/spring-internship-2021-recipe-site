{"ast":null,"code":"//import recipes from \"../data/recipes.json\";\nexport async function getRecipes() {\n  const response = await fetch(\"https://internship-recipe-api.ckpd.co/recipes\", {\n    headers: {\n      \"X-Api-Key\": \"remark-fish-magician\"\n    }\n  });\n  const jsonData = await response.json();\n  const links = jsonData === null || jsonData === void 0 ? void 0 : jsonData.links;\n  const recipes = jsonData === null || jsonData === void 0 ? void 0 : jsonData.recipes;\n  return recipes;\n}\nexport async function getRecipe(id) {\n  const response = await fetch(\"https://internship-recipe-api.ckpd.co/recipes/6705420\", {\n    headers: {\n      \"X-Api-Key\": \"remark-fish-magician\"\n    }\n  });\n  const jsonData = await response.json();\n  const links = jsonData === null || jsonData === void 0 ? void 0 : jsonData.links;\n  const recipe = jsonData === null || jsonData === void 0 ? void 0 : jsonData.recipes;\n  console.log(`jsondata = ${jsonData}`);\n  return recipe; //return (recipe as Recipe[]).find((recipe) => recipe.id === id) || null;\n}","map":{"version":3,"sources":["/Users/yamaguchitaiyo/Documents/cookpad/spring-internship-2021-recipe-site/lib/recipe.ts"],"names":["getRecipes","response","fetch","headers","jsonData","json","links","recipes","getRecipe","id","recipe","console","log"],"mappings":"AAAA;AAmBA,OAAO,eAAeA,UAAf,GAA+C;AACpD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+CAD0B,EAE1B;AACEC,IAAAA,OAAO,EAAE;AAAE,mBAAa;AAAf;AADX,GAF0B,CAA5B;AAMA,QAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAvB;AACA,QAAMC,KAAK,GAAGF,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEE,KAAxB;AACA,QAAMC,OAAO,GAAGH,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEG,OAA1B;AACA,SAAOA,OAAP;AACD;AAED,OAAO,eAAeC,SAAf,CAAyBC,EAAzB,EAA6D;AAClE,QAAMR,QAAQ,GAAG,MAAMC,KAAK,CAC1B,uDAD0B,EAE1B;AACEC,IAAAA,OAAO,EAAE;AAAE,mBAAa;AAAf;AADX,GAF0B,CAA5B;AAMA,QAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAvB;AACA,QAAMC,KAAK,GAAGF,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEE,KAAxB;AACA,QAAMI,MAAM,GAAGN,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEG,OAAzB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAa,cAAaR,QAAS,EAAnC;AACA,SAAOM,MAAP,CAXkE,CAYlE;AACD","sourcesContent":["//import recipes from \"../data/recipes.json\";\n\nexport type Recipe = {\n  id: number;\n  title: string;\n  description: string;\n  image_url: string | null;\n  author: {\n    user_name: string;\n  };\n  published_at: string;\n  steps: string[];\n  ingredients: {\n    name: string;\n    quantity: string;\n  }[];\n  related_recipes: number[];\n};\n\nexport async function getRecipes(): Promise<Recipe[]> {\n  const response = await fetch(\n    \"https://internship-recipe-api.ckpd.co/recipes\",\n    {\n      headers: { \"X-Api-Key\": \"remark-fish-magician\" },\n    }\n  );\n  const jsonData = await response.json();\n  const links = jsonData?.links;\n  const recipes = jsonData?.recipes;\n  return recipes as Recipe[];\n}\n\nexport async function getRecipe(id: number): Promise<Recipe | null> {\n  const response = await fetch(\n    \"https://internship-recipe-api.ckpd.co/recipes/6705420\",\n    {\n      headers: { \"X-Api-Key\": \"remark-fish-magician\" },\n    }\n  );\n  const jsonData = await response.json();\n  const links = jsonData?.links;\n  const recipe = jsonData?.recipes;\n  console.log(`jsondata = ${jsonData}`);\n  return recipe as Recipe;\n  //return (recipe as Recipe[]).find((recipe) => recipe.id === id) || null;\n}\n"]},"metadata":{},"sourceType":"module"}