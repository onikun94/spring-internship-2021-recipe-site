{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yamaguchitaiyo/Documents/cookpad/spring-internship-2021-recipe-site/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/yamaguchitaiyo/Documents/cookpad/spring-internship-2021-recipe-site/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n//import recipes from \"../data/recipes.json\";\nexport function getRecipes() {\n  return _getRecipes.apply(this, arguments);\n}\n\nfunction _getRecipes() {\n  _getRecipes = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var response, jsonData, links, recipes;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"https://internship-recipe-api.ckpd.co/recipes\", {\n              headers: {\n                \"X-Api-Key\": \"remark-fish-magician\"\n              }\n            });\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            jsonData = _context.sent;\n            links = jsonData === null || jsonData === void 0 ? void 0 : jsonData.links;\n            recipes = jsonData === null || jsonData === void 0 ? void 0 : jsonData.recipes;\n            return _context.abrupt(\"return\", recipes);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getRecipes.apply(this, arguments);\n}\n\nexport function getRecipe(_x) {\n  return _getRecipe.apply(this, arguments);\n}\n\nfunction _getRecipe() {\n  _getRecipe = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n    var response, jsonData, links, recipe;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"https://internship-recipe-api.ckpd.co/recipes/\".concat(id), {\n              headers: {\n                \"X-Api-Key\": \"remark-fish-magician\"\n              }\n            });\n\n          case 2:\n            response = _context2.sent;\n            _context2.next = 5;\n            return response.json();\n\n          case 5:\n            jsonData = _context2.sent;\n            links = jsonData === null || jsonData === void 0 ? void 0 : jsonData.links;\n            recipe = jsonData === null || jsonData === void 0 ? void 0 : jsonData.recipes;\n            return _context2.abrupt(\"return\", recipe);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getRecipe.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/yamaguchitaiyo/Documents/cookpad/spring-internship-2021-recipe-site/lib/recipe.ts"],"names":["getRecipes","fetch","headers","response","json","jsonData","links","recipes","getRecipe","id","recipe"],"mappings":";;AAAA;AAmBA,gBAAsBA,UAAtB;AAAA;AAAA;;;yEAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACkBC,KAAK,CAC1B,+CAD0B,EAE1B;AACEC,cAAAA,OAAO,EAAE;AAAE,6BAAa;AAAf;AADX,aAF0B,CADvB;;AAAA;AACCC,YAAAA,QADD;AAAA;AAAA,mBAOkBA,QAAQ,CAACC,IAAT,EAPlB;;AAAA;AAOCC,YAAAA,QAPD;AAQCC,YAAAA,KARD,GAQSD,QART,aAQSA,QART,uBAQSA,QAAQ,CAAEC,KARnB;AASCC,YAAAA,OATD,GASWF,QATX,aASWA,QATX,uBASWA,QAAQ,CAAEE,OATrB;AAAA,6CAUEA,OAVF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAaP,gBAAsBC,SAAtB;AAAA;AAAA;;;wEAAO,kBAAyBC,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACkBR,KAAK,yDACuBQ,EADvB,GAE1B;AACEP,cAAAA,OAAO,EAAE;AAAE,6BAAa;AAAf;AADX,aAF0B,CADvB;;AAAA;AACCC,YAAAA,QADD;AAAA;AAAA,mBAOkBA,QAAQ,CAACC,IAAT,EAPlB;;AAAA;AAOCC,YAAAA,QAPD;AAQCC,YAAAA,KARD,GAQSD,QART,aAQSA,QART,uBAQSA,QAAQ,CAAEC,KARnB;AASCI,YAAAA,MATD,GASUL,QATV,aASUA,QATV,uBASUA,QAAQ,CAAEE,OATpB;AAAA,8CAUEG,MAVF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["//import recipes from \"../data/recipes.json\";\n\nexport type Recipe = {\n  id: number;\n  title: string;\n  description: string;\n  image_url: string | null;\n  author: {\n    user_name: string;\n  };\n  published_at: string;\n  steps: string[];\n  ingredients: {\n    name: string;\n    quantity: string;\n  }[];\n  related_recipes: number[];\n};\n\nexport async function getRecipes(): Promise<Recipe[]> {\n  const response = await fetch(\n    \"https://internship-recipe-api.ckpd.co/recipes\",\n    {\n      headers: { \"X-Api-Key\": \"remark-fish-magician\" },\n    }\n  );\n  const jsonData = await response.json();\n  const links = jsonData?.links;\n  const recipes = jsonData?.recipes;\n  return recipes as Recipe[];\n}\n\nexport async function getRecipe(id: number): Promise<Recipe | null> {\n  const response = await fetch(\n    `https://internship-recipe-api.ckpd.co/recipes/${id}`,\n    {\n      headers: { \"X-Api-Key\": \"remark-fish-magician\" },\n    }\n  );\n  const jsonData = await response.json();\n  const links = jsonData?.links;\n  const recipe = jsonData?.recipes;\n  return recipe as Recipe;\n  //return (recipe as Recipe[]).find((recipe) => recipe.id === id) || null;\n}\n"]},"metadata":{},"sourceType":"module"}