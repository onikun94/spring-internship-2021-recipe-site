{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yamaguchitaiyo/Documents/cookpad/spring-internship-2021-recipe-site/pages/index.tsx\";\n//import { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { getPages, getRecipes, search } from \"../lib/recipe\";\nimport Link from \"next/link\";\nimport { useState, useEffect } from \"react\";\nimport Header from \"../components/Header\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1) //padding: theme.spacing(2),\n\n    }\n  },\n  field: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\"\n    }\n  }\n}));\n\nconst TopPage = () => {\n  const {\n    0: recipes,\n    1: setRecipes\n  } = useState(null);\n  const {\n    0: keyword,\n    1: setKeyword\n  } = useState(\"\");\n  const {\n    0: link,\n    1: setLink\n  } = useState(null);\n  const classes = useStyles();\n\n  const handleSubmit = async words => {\n    if (keyword !== \"\") {\n      const res = await search(words);\n      console.log(`res = ${res.recipes}`);\n      setRecipes(res.recipes);\n      setLink(res.links);\n    }\n  };\n\n  const handlePage = async () => {\n    if (link !== null && link.next) {\n      const response = await getPages(link === null || link === void 0 ? void 0 : link.next);\n      setRecipes(response.recipes);\n      setLink(response.links);\n    }\n  };\n\n  const handlePage2 = async () => {\n    if (link !== null && link.prev) {\n      const response = await getPages(link === null || link === void 0 ? void 0 : link.prev);\n      setRecipes(response.recipes);\n      setLink(response.links);\n    }\n  };\n\n  const handleWord = word => {\n    setKeyword(word);\n  };\n\n  useEffect(() => {\n    (async () => {\n      const response = await getRecipes();\n      setRecipes(response.recipes);\n      setLink(response.links);\n    })();\n  }, []);\n  if (recipes === null) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"THERE IS NO RECIPES\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 32\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.field,\n        noValidate: true,\n        autoComplete: \"off\",\n        onSubmit: e => {\n          e.preventDefault();\n          handleSubmit(keyword); //console.log(keyword);\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"filled-basic\",\n          label: \"\\u6599\\u7406\\u540D\",\n          variant: \"filled\",\n          value: keyword,\n          onChange: e => {\n            handleWord(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), recipes.map(r => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          href: `/recipes/${r.id}`,\n          children: r.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: r.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), r.image_url && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: r.image_url,\n          alt: \"\\u30EC\\u30B7\\u30D4\\u753B\\u50CF\",\n          width: \"300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)\n    }, r.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonState\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handlePage2,\n          children: \"\\u524D\\u3078\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handlePage,\n          children: \"\\u6B21\\u3078\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\nexport default TopPage;","map":{"version":3,"sources":["/Users/yamaguchitaiyo/Documents/cookpad/spring-internship-2021-recipe-site/pages/index.tsx"],"names":["React","makeStyles","createStyles","Button","TextField","getPages","getRecipes","search","Link","useState","useEffect","Header","useStyles","theme","root","margin","spacing","field","width","TopPage","recipes","setRecipes","keyword","setKeyword","link","setLink","classes","handleSubmit","words","res","console","log","links","handlePage","next","response","handlePage2","prev","handleWord","word","e","preventDefault","target","value","map","r","id","title","description","image_url"],"mappings":"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","sourcesContent":["//import { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { getPages, getRecipes, search } from \"../lib/recipe\";\nimport Link from \"next/link\";\nimport { FC, useState, useEffect } from \"react\";\nimport Header from \"../components/Header\";\nimport OverView from \"../components/OverView\";\nimport type { Recipe, Links } from \"../lib/recipe\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"& > *\": {\n        margin: theme.spacing(1),\n\n        //padding: theme.spacing(2),\n      },\n    },\n    field: {\n      \"& > *\": {\n        margin: theme.spacing(1),\n        width: \"25ch\",\n      },\n    },\n  })\n);\nconst TopPage: FC = () => {\n  const [recipes, setRecipes] = useState<Recipe[] | null>(null);\n  const [keyword, setKeyword] = useState<string>(\"\");\n  const [link, setLink] = useState<Links | null>(null);\n  const classes = useStyles();\n\n  const handleSubmit = async (words: string) => {\n    if (keyword !== \"\") {\n      const res = await search(words);\n      console.log(`res = ${res.recipes}`);\n      setRecipes(res.recipes);\n      setLink(res.links);\n    }\n  };\n\n  const handlePage = async () => {\n    if (link !== null && link.next) {\n      const response = await getPages(link?.next);\n      setRecipes(response.recipes);\n      setLink(response.links);\n    }\n  };\n\n  const handlePage2 = async () => {\n    if (link !== null && link.prev) {\n      const response = await getPages(link?.prev);\n      setRecipes(response.recipes);\n      setLink(response.links);\n    }\n  };\n\n  const handleWord = (word: string) => {\n    setKeyword(word);\n  };\n  useEffect(() => {\n    (async () => {\n      const response = await getRecipes();\n      setRecipes(response.recipes);\n      setLink(response.links);\n    })();\n  }, []);\n\n  if (recipes === null) return <div>THERE IS NO RECIPES</div>;\n\n  return (\n    <div>\n      <Header />\n\n      <div>\n        <form\n          className={classes.field}\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            handleSubmit(keyword);\n            //console.log(keyword);\n          }}\n        >\n          <TextField\n            id=\"filled-basic\"\n            label=\"料理名\"\n            variant=\"filled\"\n            value={keyword}\n            onChange={(e) => {\n              handleWord(e.target.value);\n            }}\n          />\n        </form>\n      </div>\n\n      {recipes.map((r) => (\n        <div key={r.id}>\n          <div>\n            <Link href={`/recipes/${r.id}`}>{r.title}</Link>\n            <p>{r.description}</p>\n            {r.image_url && (\n              <img src={r.image_url} alt=\"レシピ画像\" width=\"300\" />\n            )}\n          </div>\n        </div>\n      ))}\n      <div className=\"buttonState\">\n        <div className={classes.root}>\n          <Button variant=\"contained\" onClick={handlePage2}>\n            前へ\n          </Button>\n          <Button variant=\"contained\" onClick={handlePage}>\n            次へ\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TopPage;\n"]},"metadata":{},"sourceType":"module"}